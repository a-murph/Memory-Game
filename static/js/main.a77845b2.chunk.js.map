{"version":3,"sources":["components/Image/Image.js","components/Header/Header.js","App.js","index.js"],"names":["Image","props","react_default","a","createElement","className","src","concat","image","alt","onClick","data-image","Header","lastGuess","score","hiscore","App","state","images","clicked","scrambleImages","newArr","_this","i","length","j","Math","floor","random","temp","setState","progressGame","monster","indexOf","Object","toConsumableArray","handleImageClick","event","target","dataset","split","this","_this2","components_Header_Header","map","index","components_Image_Image","key","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"0QASeA,SAND,SAAAC,GAAK,OAClBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACdH,EAAAC,EAAAC,cAAA,OAAKE,IAAG,UAAAC,OAAYN,EAAMO,OAASC,IAAI,GAAGC,QAAST,EAAMS,QAASC,aAAYV,EAAMO,WCkBvEI,SApBA,SAAAX,GAAK,OACnBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACdH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UACjBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,mBACqB,SAApBJ,EAAMY,UACNX,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAb,2BACEH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAb,eAAyCJ,EAAMY,UAAY,YAAc,cAAzE,KAEHX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACdH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,uBAAhB,UAA8CJ,EAAMa,OADrD,IAECZ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAAhB,eAAqDJ,EAAMc,WAG7Db,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACdH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBAAd,oCACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBAAd,gFC6EYW,oNAzFdC,MAAQ,CACPC,OAAQ,CACP,WACA,YACA,eACA,YACA,WACA,cACA,cACA,WACA,eACA,cACA,eACA,cACA,cACA,WACA,WACA,YAEDC,QAAS,GACTL,MAAO,EACPC,QAAS,EACTF,UAAW,UAIZO,eAAiB,WAEhB,IADA,IAAIC,EAASC,EAAKL,MAAMC,OACfK,EAAIF,EAAOG,OAAS,EAAGD,EAAI,EAAGA,IAAK,CAC3C,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IACpCM,EAAOR,EAAOE,GAClBF,EAAOE,GAAKF,EAAOI,GACnBJ,EAAOI,GAAKI,EAEbP,EAAKQ,SAAS,CAACZ,OAAQG,OAIxBU,aAAe,SAAAC,IAC+B,IAAzCV,EAAKL,MAAME,QAAQc,QAAQD,GAC9BV,EAAKQ,SAAS,CACbX,QAAQe,OAAAC,EAAA,EAAAD,CAAKZ,EAAKL,MAAME,SAAjBZ,OAAA,CAA0ByB,IACjClB,MAAOQ,EAAKL,MAAMH,MAAQ,EAC1BD,WAAW,GACT,WACES,EAAKL,MAAMH,MAAQQ,EAAKL,MAAMF,SACjCO,EAAKQ,SAAS,CACbf,QAASO,EAAKL,MAAMH,UAKvBQ,EAAKQ,SAAS,CACbX,QAAS,GACTL,MAAO,EACPD,WAAW,OAMduB,iBAAmB,SAAAC,GAClBf,EAAKF,iBAGLE,EAAKS,aAAaM,EAAMC,OAAOC,QAAQ/B,MAAMgC,MAAM,KAAK,wFAIxDC,KAAKrB,kDAGG,IAAAsB,EAAAD,KACR,OACCvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACdH,EAAAC,EAAAC,cAACuC,EAAD,CAAQ7B,MAAO2B,KAAKxB,MAAMH,MAAOC,QAAS0B,KAAKxB,MAAMF,QAASF,UAAW4B,KAAKxB,MAAMJ,YACpFX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACboC,KAAKxB,MAAMC,OAAO0B,IAAI,SAACpC,EAAOqC,GAAR,OACtB3C,EAAAC,EAAAC,cAAC0C,EAAD,CAAOC,IAAKF,EAAOnC,QAASgC,EAAKN,iBAAkB5B,MAAOA,OAG5DN,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAAlB,kCAlFc2C,cCAlBC,IAASC,OAAOhD,EAAAC,EAAAC,cAAC+C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.a77845b2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Image.css\";\r\n\r\nconst Image = props=> (\r\n\t<div className=\"image-div\">\r\n\t\t<img src={`images/${props.image}`} alt=\"\" onClick={props.onClick} data-image={props.image}></img>\r\n\t</div>\r\n);\r\n\r\nexport default Image;","import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = props => (\r\n\t<div className=\"header\">\r\n\t\t<header className=\"topbar\">\r\n\t\t\t<h3 className=\"topbar-title\">MHW Memory Game</h3>\r\n\t\t\t{props.lastGuess === \"none\" ?\r\n\t\t\t\t<p className=\"topbar-guess\">Click an image to begin</p>\r\n\t\t\t\t: <p className=\"topbar-guess\">You guessed {props.lastGuess ? \"correctly\" : \"incorrectly\"}!</p>\r\n\t\t\t}\r\n\t\t\t<div className=\"topbar-scores\">\r\n\t\t\t\t<span className=\"topbar-scores-score\">Score: {props.score}</span>|\r\n\t\t\t\t<span className=\"topbar-scores-hiscore\">High Score: {props.hiscore}</span>\r\n\t\t\t</div>\r\n\t\t</header>\r\n\t\t<div className=\"instructions\">\r\n\t\t\t<h1 className=\"instructions-title\">Monster Hunter World Memory Game</h1>\r\n\t\t\t<h4 className=\"instructions-text\">Click on an image to earn points, but don't click on any more than once!</h4>\r\n\t\t</div>\r\n\t</div>\r\n);\r\n\r\nexport default Header;","import React, { Component } from 'react';\nimport Image from \"./components/Image\";\nimport Header from \"./components/Header\";\nimport \"./App.css\";\n\nclass App extends Component {\n\tstate = {\n\t\timages: [\n\t\t\t\"anja.jpg\",\n\t\t\t\"bazel.jpg\",\n\t\t\t\"deviljho.jpg\",\n\t\t\t\"kirin.jpg\",\n\t\t\t\"kulu.jpg\",\n\t\t\t\"kushala.png\",\n\t\t\t\"legiana.jpg\",\n\t\t\t\"nerg.jpg\",\n\t\t\t\"odogaron.jpg\",\n\t\t\t\"paolumu.jpg\",\n\t\t\t\"rathalos.jpg\",\n\t\t\t\"rathian.jpg\",\n\t\t\t\"teostra.jpg\",\n\t\t\t\"tobi.jpg\",\n\t\t\t\"vaal.png\",\n\t\t\t\"xeno.jpg\",\n\t\t],\n\t\tclicked: [],\n\t\tscore: 0,\n\t\thiscore: 0,\n\t\tlastGuess: \"none\"\n\t}\n\n\t//RANDOMIZE ORDER OF IMAGES\n\tscrambleImages = () => {\n\t\tlet newArr = this.state.images;\n\t\tfor (let i = newArr.length - 1; i > 0; i--) {\n\t\t\tlet j = Math.floor(Math.random() * (i + 1));\n\t\t\tlet temp = newArr[i];\n\t\t\tnewArr[i] = newArr[j];\n\t\t\tnewArr[j] = temp;\n\t\t}\n\t\tthis.setState({images: newArr});\n\t};\n\n\t//GAME LOGIC\n\tprogressGame = monster => {\n\t\tif (this.state.clicked.indexOf(monster) === -1) { //if monster has not been clicked yet\n\t\t\tthis.setState({\n\t\t\t\tclicked: [...this.state.clicked, monster], //add it to array of clicked monsters\n\t\t\t\tscore: this.state.score + 1, //increment score by 1\n\t\t\t\tlastGuess: true //set last guess to correct\n\t\t\t}, () => { //then\n\t\t\t\tif (this.state.score > this.state.hiscore) { //if new score is higher then high score\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\thiscore: this.state.score //set new high score\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t} else { //if monster has already been clicked before\n\t\t\tthis.setState({ //reset game\n\t\t\t\tclicked: [],\n\t\t\t\tscore: 0,\n\t\t\t\tlastGuess: false //set last guess to incorrect\n\t\t\t});\n\t\t}\n\t}\n\n\t//IMAGE CLICK EVENT\n\thandleImageClick = event => {\n\t\tthis.scrambleImages(); //randomize order of images\n\n\t\t//passes only monster name (without file extension) to game logic function\n\t\tthis.progressGame(event.target.dataset.image.split(\".\")[0]);\n\t};\n\n\tcomponentDidMount() { //on page load\n\t\tthis.scrambleImages(); //randomize order of images\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<Header score={this.state.score} hiscore={this.state.hiscore} lastGuess={this.state.lastGuess} />\n\t\t\t\t<div className=\"image-container\">\n\t\t\t\t\t{this.state.images.map((image, index) => (\n\t\t\t\t\t\t<Image key={index} onClick={this.handleImageClick} image={image} />\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t<footer className=\"footer\">\n\t\t\t\t\tÂ©2018 Andrew Murphy\n\t\t\t\t</footer>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}